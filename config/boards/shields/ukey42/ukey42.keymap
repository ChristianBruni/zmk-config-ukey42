#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY      0
#define NUMPAD      1
#define FUNCTION    2
#define BT          3

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

/ {
    conditional_layer {
        compatible = "zmk,conditional-layer";
        bt_layer { 
            if-layer = <NUMPAD FUNCTION>;
            then-layer = <BT>;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            display_name = "QWERTY";

            bindings = <
                &mt LS(Q) Q   &mt LS(W) W   &mt LS(E) E   &mt LS(R) R    &mt LS(T) T                               &mt LS(Y) Y   &mt LS(U) U   &mt LS(I) I              &mt LS(O) O                 &mt LS(P) P
                &mt LS(A) A   &mt LS(S) S   &mt LS(D) D   &mt LS(F) F    &mt LS(G) G                               &mt LS(H) H   &mt LS(J) J   &mt LS(K) K              &mt LS(L) L                 &mt SEMICOLON COLON
                &mt LS(Z) Z   &mt LS(X) X   &mt LS(C) C   &mt LS(V) V    &mt LS(B) B                               &mt LS(N) N   &mt LS(M) M   &mt LESS_THAN KP_COMMA   &mt GREATHER_THAN KP_DOT    &mt EXCLAMATION QUESTION 
                &kp LCTRL     &kp TAB       &kp LALT      &mo FUNCTION   &mo NUMPAD    &kp SPACE   &kp BACKSPACE   &kp ENTER     &kp LSHIFT    &kp ESCAPE               &kp DELETE                  &mt GRAVE TILDE2
            >;
        };


        numpad_layer {
            display_name = "NUMPAD";

            bindings = <
                &kp AMPERSAMD   &kp PERCENT       &kp KP_PLUS      &kp KP_LEFT_PARENTHESIS   &kp KP_RIGHT_PARENTHESIS                     &mt BACKSLASH PIPE   &kp KP_NUMBER_7   &kp KP_NUMBER_8   &kp KP_NUMBER_9   &kp DOLLAR
                &kp HASH        &kp KP_MULTIPLY   &kp KP_MINUS     &kp LEFT_BRACKET          &kp RIGHT_BRACKET                            &kp SLASH            &kp KP_NUMBER_4   &kp KP_NUMBER_5   &kp KP_NUMBER_6   &kp AT_SIGN 
                &kp CARET       &kp KP_EQUAL      &kp UNDERSCORE   &kp LEFT_BRACE            &kp RIGHT_BRACE                              &kp KP_NUMBER_0      &kp KP_NUMBER_1   &kp KP_NUMBER_2   &kp KP_NUMBER_3   &kp EXCLAMATION 
                &trans          &trans            &trans           &trans                    &trans                     &trans   &trans   &trans               &trans            &trans            &trans            &mt SQT DQT
            >;
        };


        function_layer {
            display_name = "FUNCTION";

            bindings = <
                &kp F1           &kp F2       &kp F3                  &kp F4                &kp F5                               &kp F6            &kp F7     &kp F8        &kp F9          &kp F10 
                &kp C_PREVIOUS   &kp C_NEXT   &kp C_VOLUME_DOWN       &kp C_VOLUME_UP       &kp C_PLAY_PAUSE                     &kp LEFT          &kp UP     &kp DOWN      &kp RIGHT       &kp F11 
                &none            &none        &kp C_BRIGHTNESS_DOWN   &kp C_BRIGHTNESS_UP   &none                                &kp PRINTSCREEN   &kp HOME   &kp PAGE_UP   &kp PAGE_DOWN   &kp END     
                &trans           &trans       &kp LEFT_GUI            &kp CAPSLOCK          &trans             &trans   &trans   &trans            &trans     &trans        &trans          &none     
            >;
        };


        bt_layer {
            display_name = "BT";

            bindings = <
                &none            &mmv MOVE_UP     &mkp LCLK         &none       &none                      &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bootloader  
                &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT   &mkp RCLK   &none                      &none          &none          &none          &none          &sys_reset
                &none            &none            &none             &none       &none                      &none          &none          &none          &none          &none     
                &trans           &trans           &trans            &trans      &trans   &trans   &trans   &trans         &trans         &trans         &trans         &none     
            >;
        };
    };
};